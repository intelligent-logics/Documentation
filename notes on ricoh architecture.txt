rout is the pin that outputs the mixed outputs for the 2 rectangle wave generators
cout is the pin that outputs the mixed outputs for the internal triangle generator
it can also be used to output the mixed outputs for the random wave generator

A0-A15 is the 6502's address bus output pins
D0-D7 is the 6502 data bus
the clk input pin is connected to a divide by 12 counter. meaning the 6502 runs off a frequency thats divided by 12.
a 21.48 mhz clock should be used to feed the pin so that the 6502 runs at 1.79 mhz

phi2 is the output of the 1.79 mhz clock and is to be used to enable external address decoder logic

irq requires that the I flag in the status register be set to 0 

NMI's only work on a falling edge

write is active low for the R/W pin

4017R is designed to go low when the following conditions are met:
1. a write signal is being outputted from the R/W pin 
2. the phi2 clock is 1. 
3. the current address being written to is 0x4017
this is so external hardware can be told to load the current controller inputs from the controllers data line

4016R is designe to go low when the following conditions are met:
1. a write signal is being outputted from the R/W pin 
2. the phi2 clock is 1. 
3. the current address being written to is 0x4016
i assume this is also for telling external hardware to load the current inputs from the controller data line. remember that the nes allows for 2 controllers

4016w0, 4016w1, 4016w2 are representative of the 0th, 1st and 2nd bit of address 4016
the purpose of these registers is to act as a strobe line for the shift registers inside the controllers

quirks of the cpu in general are:
1. the first clock cycle reads the next pc address into the a buffer register located just before the actual instruction register. this means that the minimum cycle time for an instruction is 2 cycles.

2. the JSR instruction consists of 2 immediate bytes. the first byte is read into the aforementioned temp register on the first cycle, then the pc is pushed onto the stack in the second cycle.
the second byte of the jsr instruction is then read into the high register of the pc register while also loading the lower register with the upper byte. this happens in the 3rd cycle.

3. the jsr instruction also has a dead cycle. this means that the jsr will always take 6 cycles to execute.
